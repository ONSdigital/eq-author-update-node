// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`MultipleChoiceAnswer Option should render answer when it has one 1`] = `
<styled.div
  error={true}
>
  <styled.input
    error={true}
    type="Checkbox"
  />
  <styled.label>
    Missing label
  </styled.label>
  <styled.div>
    <styled.div />
    <styled.input
      type="text"
    />
  </styled.div>
</styled.div>
`;

exports[`MultipleChoiceAnswer Option should render checkbox options 1`] = `
<styled.div
  error={true}
>
  <styled.input
    error={true}
    type="Checkbox"
  />
  <styled.label>
    Missing label
  </styled.label>
</styled.div>
`;

exports[`MultipleChoiceAnswer Option should render label when it has one 1`] = `
<styled.div
  error={false}
>
  <styled.input
    error={false}
    type="Checkbox"
  />
  <styled.label>
    Option label
  </styled.label>
</styled.div>
`;

exports[`MultipleChoiceAnswer Option should render radio options 1`] = `
<styled.div
  error={true}
>
  <styled.input
    error={true}
    type="Radio"
  />
  <styled.label>
    Missing label
  </styled.label>
</styled.div>
`;

exports[`MultipleChoiceAnswer should render Input 1`] = `
<input
  className="sc-ftvSup koJFQt"
/>
`;

exports[`MultipleChoiceAnswer should render Input with radio and error 1`] = `
<input
  className="sc-ftvSup hhwUzp"
  type="Radio"
/>
`;

exports[`MultipleChoiceAnswer should render OptionItem 1`] = `
<div
  className="sc-kDDrLX bUeZDx"
/>
`;

exports[`MultipleChoiceAnswer should render OptionItem with error 1`] = `
<div
  className="sc-kDDrLX eGCEkw"
/>
`;

exports[`MultipleChoiceAnswer should render checkboxes 1`] = `
<styled.div>
  <styled.div>
    Foo
  </styled.div>
  <Option
    key="1"
    option={
      {
        "id": "1",
      }
    }
    type="Checkbox"
  />
</styled.div>
`;

exports[`MultipleChoiceAnswer should render mutually exclusive when it has one 1`] = `
<styled.div>
  <styled.div>
    Foo
  </styled.div>
  <Option
    key="1"
    option={
      {
        "id": "1",
      }
    }
    type="Checkbox"
  />
  <styled.div>
    <styled.div>
      Or
    </styled.div>
    <Option
      option={
        {
          "id": "3",
        }
      }
      type="Checkbox"
    />
  </styled.div>
</styled.div>
`;

exports[`MultipleChoiceAnswer should render other when it has one 1`] = `
<styled.div>
  <styled.div>
    Foo
  </styled.div>
  <Option
    key="1"
    option={
      {
        "id": "1",
      }
    }
    type="Radio"
  />
  <Option
    answer={
      {
        "id": 2,
        "type": "TextField",
      }
    }
    key="2"
    option={
      {
        "additionalAnswer": {
          "id": 2,
          "type": "TextField",
        },
        "id": "2",
      }
    }
    type="Radio"
  />
</styled.div>
`;

exports[`MultipleChoiceAnswer should render radio 1`] = `
<styled.div>
  <styled.div>
    Foo
  </styled.div>
  <Option
    key="1"
    option={
      {
        "id": "1",
      }
    }
    type="Radio"
  />
</styled.div>
`;
